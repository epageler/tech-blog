<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Python on Evan&#39;s Tech Blog</title>
    <link>http://localhost:1313/epageler/categories/python/</link>
    <description>Recent content in Python on Evan&#39;s Tech Blog</description>
    <image>
      <title>Evan&#39;s Tech Blog</title>
      <url>http://localhost:1313/epageler/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:1313/epageler/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 28 May 2025 14:19:02 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/epageler/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shiny Cheatsheet (2025 05 28_00)</title>
      <link>http://localhost:1313/epageler/posts/2025-05-28_00/</link>
      <pubDate>Wed, 28 May 2025 14:19:02 -0500</pubDate>
      <guid>http://localhost:1313/epageler/posts/2025-05-28_00/</guid>
      <description>Shiny Python Cheatsheet Get pdf by clicking on the link below:
Shiny Python Cheatsheet</description>
    </item>
    <item>
      <title>Shiny: Reactive Global Variable (Post: 2025 05 27_00)</title>
      <link>http://localhost:1313/epageler/posts/2025-05-27_00/</link>
      <pubDate>Tue, 27 May 2025 16:11:35 -0500</pubDate>
      <guid>http://localhost:1313/epageler/posts/2025-05-27_00/</guid>
      <description>Shiny: Set text field upon button press with reactive Global Variable and set &amp;amp; get methods Technique uses a global variable &amp;amp; reactive.effect
from shiny import App, Inputs, Outputs, Session, reactive, render, ui app_ui = ui.page_sidebar( ui.sidebar( ui.input_action_button(&amp;#34;minus&amp;#34;, &amp;#34;-1&amp;#34;), ui.input_action_button(&amp;#34;plus&amp;#34;, &amp;#34;+1&amp;#34;), ), ui.output_text(&amp;#34;value&amp;#34;), ) def server(input: Inputs, output: Outputs, session: Session): # Initialize global variable val = reactive.value(&amp;#34;&amp;#34;) @reactive.effect @reactive.event(input.minus) def _(): # Set global variable val.set(&amp;#34;Negative&amp;#34;) @reactive.effect @reactive.event(input.plus) def _(): # Set global variable val.</description>
    </item>
    <item>
      <title>Create Python Python Project with Poetry (Post 2024-12-09-01_01)</title>
      <link>http://localhost:1313/epageler/posts/2024-12-09_01/</link>
      <pubDate>Mon, 09 Dec 2024 12:13:58 -0600</pubDate>
      <guid>http://localhost:1313/epageler/posts/2024-12-09_01/</guid>
      <description> Steps:
Create the project folder Open project folder with vscode Assure that the vscode workspace is the project folder Use the vscode command pallette to create a virtual environment in the project folder At the vscode terminal, enter: poetry init Use poetry add to add libraries to the virtual environment. For example, to add pandas: poetry add pandas Display libraries with: poetry show --tree Create main.py in the project folder Activate the virtual enviromnent with: poetry shell Exit the environment with: exit </description>
    </item>
  </channel>
</rss>
